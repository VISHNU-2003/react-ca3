{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alapa\\\\OneDrive\\\\Desktop\\\\final252\\\\EMS\\\\src\\\\Page\\\\Dashboard\\\\List.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(_ref) {\n  let {\n    employees,\n    handleEdit,\n    handleDelete\n  } = _ref;\n  const formatter = new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    minimumFractionDigits: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contain-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"striped-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2,\n            className: \"text-center\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.length > 0 ? employees.map((employee, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(employee.salary)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [employee.date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(employee.id),\n              className: \"button muted-button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(employee.id),\n              className: \"button muted-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 7,\n            children: \"No Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = List;\nexport default List; // The provided code is a React functional component that renders a table of employees. The component takes in three props: `employees`, `handleEdit`, and `handleDelete`.\n// The `employees` prop is an array of objects that represent the employee data to be displayed in the table. Each object contains properties such as `id`, `firstName`, `lastName`, `email`, `salary`, and `date`.\n// The `handleEdit` and `handleDelete` props are callback functions that are called when the Edit and Delete buttons are clicked, respectively. These functions receive the `id` of the employee as a parameter, which can be used to perform the corresponding action on the employee data.\n// Inside the component, a new `Intl.NumberFormat` object is created to format the `salary` value of each employee as a currency string. The currency format is set to US dollars by default, but this can be changed to any other currency by modifying the `currency` property of the `formatter` object.\n// The component renders a `table` element with a header row and a body containing the employee data. If there are no employees in the `employees` array, a message \"No Employees\" is displayed in a row with `colSpan` set to 7.\n// For each employee in the `employees` array, a row is created with the employee data displayed in each column. The `formatter.format()` method is used to format the `salary` value as a currency string using the `Intl.NumberFormat` object created earlier.\n// Each row also contains two buttons: an Edit button and a Delete button. When clicked, these buttons call the corresponding callback functions passed in as props and pass in the `id` of the employee as a parameter. This allows the parent component to perform the appropriate action on the employee data.\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/alapa/OneDrive/Desktop/final252/EMS/src/Page/Dashboard/List.js"],"names":["React","List","employees","handleEdit","handleDelete","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","length","map","employee","i","firstName","lastName","email","format","salary","date","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,OAAuD;AAAA,MAAzC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAAyC;AAEnD,QAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7CC,IAAAA,KAAK,EAAE,UADsC;AAE7CC,IAAAA,QAAQ,EAAE,KAFmC;AAG7CC,IAAAA,qBAAqB,EAAE;AAHsB,GAA/B,CAAlB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAI,YAAA,OAAO,EAAE,CAAb;AAAgB,YAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAA,kBACKR,SAAS,CAACS,MAAV,GAAmB,CAAnB,GACGT,SAAS,CAACU,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,kBACV;AAAA,kCACI;AAAA,sBAAKA,CAAC,GAAG;AAAT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKF,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKH,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKZ,SAAS,CAACa,MAAV,CAAiBL,QAAQ,CAACM,MAA1B;AAAL;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,uBAAKN,QAAQ,CAACO,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,mCACI;AACI,cAAA,OAAO,EAAE,MAAMjB,UAAU,CAACU,QAAQ,CAACQ,EAAV,CAD7B;AAEI,cAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAeI;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,mCACI;AACI,cAAA,OAAO,EAAE,MAAMjB,YAAY,CAACS,QAAQ,CAACQ,EAAV,CAD/B;AAEI,cAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA,WAASR,QAAQ,CAACQ,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ,CADH,gBA4BG;AAAA,iCACI;AAAI,YAAA,OAAO,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AA7BR;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH;;KA9DQpB,I;AAgET,eAAeA,IAAf,C,CAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA","sourcesContent":["import React from 'react'\n\nfunction List({ employees, handleEdit, handleDelete }) {\n\n    const formatter = new Intl.NumberFormat('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        minimumFractionDigits: null\n    });\n\n    return (\n        <div className='contain-table'>\n            <table className='striped-table'>\n                <thead>\n                    <tr>\n                    \n                        <th>No.</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email</th>\n                        <th>Salary</th>\n                        <th>Date</th>\n                        <th colSpan={2} className=\"text-center\">\n                            Actions\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {employees.length > 0 ? (\n                        employees.map((employee, i) => (\n                            <tr key={employee.id}>\n                                <td>{i + 1}</td>\n                                <td>{employee.firstName}</td>\n                                <td>{employee.lastName}</td>\n                                <td>{employee.email}</td>\n                                <td>{formatter.format(employee.salary)}</td>\n                                <td>{employee.date} </td>\n                                <td className=\"text-right\">\n                                    <button\n                                        onClick={() => handleEdit(employee.id)}\n                                        className=\"button muted-button\"\n                                    >\n                                        Edit\n                                    </button>\n                                </td>\n                                <td className=\"text-left\">\n                                    <button\n                                        onClick={() => handleDelete(employee.id)}\n                                        className=\"button muted-button\"\n                                    >\n                                        Delete\n                                    </button>\n                                </td>\n                            </tr>\n                        ))\n                    ) : (\n                        <tr>\n                            <td colSpan={7}>No Employees</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default List\n\n// The provided code is a React functional component that renders a table of employees. The component takes in three props: `employees`, `handleEdit`, and `handleDelete`.\n\n// The `employees` prop is an array of objects that represent the employee data to be displayed in the table. Each object contains properties such as `id`, `firstName`, `lastName`, `email`, `salary`, and `date`.\n\n// The `handleEdit` and `handleDelete` props are callback functions that are called when the Edit and Delete buttons are clicked, respectively. These functions receive the `id` of the employee as a parameter, which can be used to perform the corresponding action on the employee data.\n\n// Inside the component, a new `Intl.NumberFormat` object is created to format the `salary` value of each employee as a currency string. The currency format is set to US dollars by default, but this can be changed to any other currency by modifying the `currency` property of the `formatter` object.\n\n// The component renders a `table` element with a header row and a body containing the employee data. If there are no employees in the `employees` array, a message \"No Employees\" is displayed in a row with `colSpan` set to 7.\n\n// For each employee in the `employees` array, a row is created with the employee data displayed in each column. The `formatter.format()` method is used to format the `salary` value as a currency string using the `Intl.NumberFormat` object created earlier.\n\n// Each row also contains two buttons: an Edit button and a Delete button. When clicked, these buttons call the corresponding callback functions passed in as props and pass in the `id` of the employee as a parameter. This allows the parent component to perform the appropriate action on the employee data."]},"metadata":{},"sourceType":"module"}